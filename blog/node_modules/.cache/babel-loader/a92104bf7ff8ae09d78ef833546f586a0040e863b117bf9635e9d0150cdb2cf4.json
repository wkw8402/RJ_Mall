{"ast":null,"code":"var _jsxFileName = \"/Users/kun/Desktop/React/blog/src/App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let post = 'toronto udon place';\n\n  /**\n   * Destructuring\n   * title = data stored in state, b = function to change state\n  **/\n  let [title, setTitle] = useState(['men coat suggestion', 'python study', 'toronto udon place']);\n  let [like, setLike] = useState([0, 0, 0]);\n  let [modal, setModal] = useState(false);\n\n  /**\n   * In React, to change array/object state, we need to make an independent copy = shallow copy or deep copy\n   * array/object variable/state save the pointer to data in RAM\n   * spread operator = ... = take brackets off = [1,2,3] -> 1,2,3\n   * [...original] or {...original} make independent copy with different reference or pointer\n   * take off brackets and make it into array again\n  **/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"ReactBlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copy = [...title];\n        copy[0] = 'women coat suggestion';\n        setTitle(copy);\n      },\n      children: \" changeTitle \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copy = [...title];\n        copy.sort();\n        setTitle(copy);\n      },\n      children: \" sortTitle \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), title.map(function (a, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          onClick: () => {\n            setModal(!modal);\n          },\n          children: [title[i], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              setLike(like[i] + 1);\n            },\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 67\n          }, this), \" \", like]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"published 02.14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, \"{i}\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    }), modal == true ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Steps for dynamic UI\n * 1. design html css\n * 2. save UI's current form in state\n * 3. write how UI will be shown according to state\n */\n\n// const Modal = () => {\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n\n/**\n * When is component good?\n * 1. repetitive html\n * 2. big pages\n * 3. things that change often\n * @returns \n */\n_s(App, \"0YuGfvEVl40zldAFCiE7nhmzwIc=\");\n_c = App;\nfunction Modal() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n// use {} for data binding\n_c2 = Modal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","post","title","setTitle","like","setLike","modal","setModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","copy","sort","map","a","i","Modal","_c","_c2","$RefreshReg$"],"sources":["/Users/kun/Desktop/React/blog/src/App.js"],"sourcesContent":["/* eslint-disable */\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  let post = 'toronto udon place';\n  \n  /**\n   * Destructuring\n   * title = data stored in state, b = function to change state\n  **/\n  let [title, setTitle] = useState(['men coat suggestion', 'python study', 'toronto udon place']);\n  \n  let [like, setLike] = useState([0,0,0]);\n\n  let [modal, setModal] = useState(false);\n\n  /**\n   * In React, to change array/object state, we need to make an independent copy = shallow copy or deep copy\n   * array/object variable/state save the pointer to data in RAM\n   * spread operator = ... = take brackets off = [1,2,3] -> 1,2,3\n   * [...original] or {...original} make independent copy with different reference or pointer\n   * take off brackets and make it into array again\n  **/\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <h4>ReactBlog</h4> \n      </div>\n\n      <button onClick={ ()=>{\n        let copy = [...title];\n        copy[0] = 'women coat suggestion'\n        setTitle(copy); \n      } }> changeTitle </button>\n\n      <button onClick={ ()=>{\n        let copy = [...title];\n        copy.sort();\n        setTitle(copy); \n      } }> sortTitle </button>\n\n      {/* <div className=\"list\">\n        <h4>{ title[0] } <span onClick={ ()=>{ setLike(like+1) } }>üëç</span> {like} </h4>\n        <p>published 02.14</p>\n      </div>\n      <div className=\"list\">\n        <h4>{ title[1] }</h4>\n        <p>published 02.14</p>\n      </div>\n      <div className=\"list\">\n        <h4 onClick={()=>{ setModal(!modal) }}>{ title[2] }</h4>\n        <p>published 02.14</p>\n      </div> */}\n\n      {\n        title.map(function(a, i){\n          return (\n            <div className=\"list\" key=\"{i}\">\n              <h4 onClick={()=>{ setModal(!modal) }}>{ title[i] } <span onClick={ ()=>{ setLike(like[i]+1) } }>üëç</span> {like}</h4>\n              <p>published 02.14</p>\n            </div>\n          )\n        })\n      }\n\n      {\n       modal == true ? <Modal/> : null \n      }\n      \n    </div>\n  );\n}\n\n/**\n * Steps for dynamic UI\n * 1. design html css\n * 2. save UI's current form in state\n * 3. write how UI will be shown according to state\n */\n\n// const Modal = () => {\n//   return (\n//     <div>\n//     </div>\n//   )\n// }\n\n/**\n * When is component good?\n * 1. repetitive html\n * 2. big pages\n * 3. things that change often\n * @returns \n */\nfunction Modal() {\n  return (\n    <div className=\"modal\">\n      <h4>Title</h4>\n      <p>Date</p>\n      <p>Detail</p>\n    </div>\n  )\n}\n\n// use {} for data binding\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}